{"ast":null,"code":"var _jsxFileName = \"/home/sameer/projects/demo/react-api-demo/src/components/PostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [id, setId] = useState(\"\");\n  const [userid, setUserId] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  function saveUser() {\n    const array = [id, userid, title, body];\n    let data = {\n      id,\n      userid,\n      title,\n      body\n    };\n    fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n      method: \"post\",\n      header: {\n        'Accept': 'application/json',\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(result => {\n      console.log(\"result\", result);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Post API Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: id,\n      onChange: e => {\n        setId(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 93\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 98\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 103\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: userid,\n      onChange: e => {\n        setUserId(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 102\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 107\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 112\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: title,\n      onChange: e => {\n        setTitle(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 100\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 105\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 110\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: body,\n      onChange: e => {\n        setBody(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 98\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 103\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 108\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveUser,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Form, \"MtybKcsgxhmFv3nxHaAOD5K+g74=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useEffect","useState","Form","id","setId","userid","setUserId","title","setTitle","body","setBody","saveUser","array","data","fetch","method","header","JSON","stringify","then","result","console","log","e","target","value"],"sources":["/home/sameer/projects/demo/react-api-demo/src/components/PostForm.js"],"sourcesContent":["import React,{useEffect,useState} from 'react'\n\nconst Form = () => {\n    const [id,setId]=useState(\"\")\n    const [userid,setUserId] = useState(\"\")\n    const [title,setTitle] = useState(\"\")\n    const [body,setBody] = useState(\"\")\n\n    function saveUser(){\n        const array = [id,userid,title,body]\n        let data ={id,userid,title,body}\n        fetch(\"https://jsonplaceholder.typicode.com/posts\",{\n        method:\"post\",\n        header:{\n              'Accept':'application/json',\n              'content-type':'application/json'\n        },\n        body:JSON.stringify(data)\n\n       }).then((result)=>{\n        console.log(\"result\",result)\n       })\n    }\n\n  return (\n    <>\n        <h1>Post API Example</h1>\n        <input type=\"text\" name=\"name\" value={id} onChange={(e)=>{setId(e.target.value)}} /><br/><br/><br/>\n        <input type=\"text\" name=\"name\" value={userid}  onChange={(e)=>{setUserId(e.target.value)}} /><br/><br/><br/>\n        <input type=\"text\" name=\"name\" value={title}  onChange={(e)=>{setTitle(e.target.value)}} /><br/><br/><br/>\n        <input type=\"text\" name=\"name\" value={body}  onChange={(e)=>{setBody(e.target.value)}} /><br/><br/><br/>        \n        <button onClick={saveUser}>Submit</button>\n    </>\n  )\n}\n\nexport default Form"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}